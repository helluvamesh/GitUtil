// CLONE REMOTE REPO
copy everything to your pc

with working dir at project parent dir:
> git clone https://github.com/userName/repoName.git


// CREATE LOCAL REPO
with working dir at project directory:
> git init
> in .git/HEAD.file change 'master' to 'main'

Git has 'master' as the default name for the base branch, Github uses 'main'; that's why we have to change the name manually.


// LINK TO REMOTE REPO
> git remote add origin https://github.com/userName/repoName.git


// PUSH TO REMOTE REPO (GitHub)
push changes to main branch

with cmd at project directory:
> git add . 
or
> git add -u (doesn't create new files)

> git commit -m "Your message"  (message will be shown next to changed files on Github)
> git push -u origin main


// PULL CHANGES FROM REMOTE REPO (FETCH + MERGE)
pull changes from main branch
only ever pull, if there are no local uncommitted changes!

with working dir at project directory:
> git pull origin main [--allow-unrelated-histories]


// CHECK UNCOMMITED LOCAL CHANGES
> git status --porcelain
or
> git diff --name-only
or
> git diff-index HEAD


// FETCH
get changes from remote repo without overwriting your local working files
> git fetch origin


// GET CHANGES IN REMOTE REPO
> git fetch origin
> git diff ...origin


// GET CHANGES IN LOCAL REPO
> git diff origin


// REFS
- https://docs.github.com/en/github/getting-started-with-github/using-git/getting-changes-from-a-remote-repository
- https://www.w3docs.com/snippets/git/how-to-programmatically-determine-if-there-are-uncommitted-changes.html